ARG OPENHANDS_BUILD_VERSION=dev
FROM node:21.7.2-bookworm-slim AS frontend-builder

WORKDIR /app

COPY ./frontend/package.json frontend/package-lock.json ./
RUN npm install -g npm@10.5.1
RUN npm ci

COPY ./frontend ./
RUN npm run build

FROM python:3.12.3-slim AS backend-builder

WORKDIR /app
ENV PYTHONPATH='/app'

ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

RUN apt-get update -y \
    && apt-get install -y curl make git build-essential \
    && python3 -m pip install poetry==1.8.2  --break-system-packages

COPY ./pyproject.toml ./poetry.lock ./
RUN touch README.md
RUN export POETRY_CACHE_DIR && poetry install --no-root && rm -rf $POETRY_CACHE_DIR

FROM docker:27-dind AS openhands-railway

WORKDIR /app

ARG OPENHANDS_BUILD_VERSION #re-declare for this section

# Railway-specific environment variables
ENV RUN_AS_OPENHANDS=true
ENV OPENHANDS_USER_ID=42420
ENV SANDBOX_LOCAL_RUNTIME_URL=http://localhost
ENV USE_HOST_NETWORK=false
ENV WORKSPACE_BASE=/opt/workspace_base
ENV OPENHANDS_BUILD_VERSION=$OPENHANDS_BUILD_VERSION
ENV SANDBOX_USER_ID=0
ENV FILE_STORE=local
ENV FILE_STORE_PATH=/.openhands-state
ENV DOCKER_TLS_CERTDIR=""
ENV DOCKER_HOST=unix:///var/run/docker.sock
ENV DOCKERD_ROOTLESS_ROOTLESSKIT_FLAGS="-p 0.0.0.0:2375:2375/tcp"

# Create necessary directories
RUN mkdir -p $FILE_STORE_PATH
RUN mkdir -p $WORKSPACE_BASE
RUN mkdir -p /var/lib/docker
RUN mkdir -p /var/log

# Install Python and system dependencies
RUN apk add --no-cache \
    python3 \
    py3-pip \
    curl \
    bash \
    sudo \
    shadow \
    git \
    openssh-client \
    supervisor \
    && ln -sf python3 /usr/bin/python

# Default is 1000, but OSX is often 501
RUN sed -i 's/^UID_MIN.*/UID_MIN 499/' /etc/login.defs || echo "UID_MIN 499" >> /etc/login.defs
# Default is 60000, but we've seen up to 200000
RUN sed -i 's/^UID_MAX.*/UID_MAX 1000000/' /etc/login.defs || echo "UID_MAX 1000000" >> /etc/login.defs

# Create app group and openhands user
RUN addgroup app
RUN adduser -D -u $OPENHANDS_USER_ID -s /bin/bash openhands && \
    addgroup openhands app && \
    addgroup openhands wheel && \
    echo '%wheel ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# Set ownership and permissions
RUN chown -R openhands:app /app && chmod -R 770 /app
RUN chown -R openhands:app $WORKSPACE_BASE && chmod -R 770 $WORKSPACE_BASE
RUN chown -R openhands:app $FILE_STORE_PATH && chmod -R 770 $FILE_STORE_PATH

# Switch to openhands user
USER openhands

ENV VIRTUAL_ENV=/app/.venv \
    PATH="/app/.venv/bin:$PATH" \
    PYTHONPATH='/app'

# Copy Python virtual environment from builder
COPY --chown=openhands:app --chmod=770 --from=backend-builder ${VIRTUAL_ENV} ${VIRTUAL_ENV}

# Copy application code
COPY --chown=openhands:app --chmod=770 ./microagents ./microagents
COPY --chown=openhands:app --chmod=770 ./openhands ./openhands
COPY --chown=openhands:app --chmod=777 ./openhands/runtime/plugins ./openhands/runtime/plugins
COPY --chown=openhands:app --chmod=770 ./openhands/agenthub ./openhands/agenthub
COPY --chown=openhands:app ./pyproject.toml ./pyproject.toml
COPY --chown=openhands:app ./poetry.lock ./poetry.lock
COPY --chown=openhands:app ./README.md ./README.md
COPY --chown=openhands:app ./MANIFEST.in ./MANIFEST.in
COPY --chown=openhands:app ./LICENSE ./LICENSE

# This is run as "openhands" user, and will create __pycache__ with openhands:openhands ownership
RUN python openhands/core/download.py # No-op to download assets
# Add this line to set group ownership of all files/directories not already in "app" group
# openhands:openhands -> openhands:app
RUN find /app \! -group app -exec chgrp app {} + 2>/dev/null || true

# Copy frontend build
COPY --chown=openhands:app --chmod=770 --from=frontend-builder /app/build ./frontend/build

# Copy Railway-specific entrypoint
COPY --chown=root:root --chmod=755 ./railway-entrypoint.sh /app/railway-entrypoint.sh

# Switch back to root for final setup
USER root

# Create Docker group and add openhands user to it
RUN addgroup -g 999 docker 2>/dev/null || addgroup docker
RUN addgroup openhands docker

# Create supervisor configuration
RUN mkdir -p /etc/supervisor/conf.d
COPY --chown=root:root ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Set up proper permissions for Docker
RUN chmod 755 /var/lib/docker
RUN chmod 755 /var/log

# Expose the port (Railway will set PORT environment variable dynamically)
EXPOSE 3000

# Health check for Railway
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:${PORT:-3000}/health || exit 1

WORKDIR /app

ENTRYPOINT ["/app/railway-entrypoint.sh"]
CMD []