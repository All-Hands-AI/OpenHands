services:
  # Devin Out-of-The-Box Agent Service
  devin:
    container_name: devin_api
    hostname: devin-api
    image: lehcode/opendevin_api-cuda${CUDA_VERSION:?}-miniconda:dev
    pull_policy: always
    # Override the default models and rebuild image with restart container then
    # These arguments will override defaults
    # command: "[-m <your_model_name>] [-e <your_embeddings_model_name>]"
    build:
      dockerfile: docker/devin/app/Dockerfile
      args:
        # jupyter_port: ${JUPYTER_PORT:?}
        debug: ${DEBUG:-}
        conda_dir: /var/miniconda
        nvidia_utils_driver: 550
        app_root: ${APP_ROOT:?}
        venv_name: ${VENV_NAME:?}
        locale: ${LANG:?}
        timezone: ${TZ:?}
        backend_host: ${DEVIN_HOST:?}
        devin_ws_port: ${DEVIN_WS_PORT:?}
        jupyter_port: ${JUPYTER_PORT:?}
    env_file:
      - ./.env
      - docker/devin/app/.env
    command: "-m mixtral -e llama2"
    depends_on:
      - litellm
      - postgres
      - redis
    networks:
      opendevin-net:
        ipv4_address: ${DEVIN_HOST:?}
    volumes:
      - root_dir_vol:/root
      - pip_cache_vol:/root/.cache/pip
      - conda_vol:${CONDA_ROOT:?}
      - ./environment.yml:${APP_ROOT:?}/environment.yml
      - ./workspace:${WORKSPACE_DIR:?}
    tmpfs:
      - /run
      - /tmp
      - /var/run
    ports:
      - "${DEVIN_WS_PORT}:${DEVIN_WS_PORT}"
      - "${JUPYTER_PORT:?}:${JUPYTER_PORT:?}"
      # VSCode Python remote debugger
      - "5678:5678"
    tty: true
    restart: no
    entrypoint: /docker-entrypoint.sh
    deploy:
      resources:
        reservations:
          devices:
            - driver: "nvidia"
              count: 1
              capabilities: [ "gpu" ]
    healthcheck:
      test: [ "CMD", "curl", "-L", "http://localhost:${DEVIN_WS_PORT}" ]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 2m

  litellm:
    image: ghcr.io/berriai/litellm:main-latest
    pull_policy: always
    container_name: od_litellm_proxy
    command: "--config /etc/litellm/config.yaml --port ${LITELLM_PORT} --num_workers 8 --detailed_debug"
    environment:
      DEFAULT_CHAT_MODEL: ${DEFAULT_CHAT_MODEL:?}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_CONTAINER_PORT}/${POSTGRES_DB}
    ports:
      - "${LITELLM_PORT}:4000"
    volumes:
      - pip_cache_vol:/root/.cache/pip:tmpfs=4G
      - ./litellm_config.yaml:/etc/litellm/config.yaml
      - ./docker/env_debug.sh:${APP_ROOT}/run/env_debug
    env_file:
      - .env
      - docker/litellm/.env
    depends_on:
      - redis
      - postgres
    networks:
      - opendevin-net
    healthcheck:
      test: [ "CMD", "litellm", "--health" ]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 2m
    tmpfs:
      - /run
      - /var/run
      - /tmp
      - /var/tmp

  redis:
    image: ${REDIS_IMAGE:?}:latest
    container_name: od_redis
    pull_policy: always
    env_file: docker/redis/.env
    ports:
      - "${REDIS_SERVER_PORT}:6379"
      - "${REDIS_INSIGHT_PORT}:8001"
    volumes:
      - ./docker/redis/data:/data
      - ./docker/redis/stack.conf:/redis-stack.conf
    networks:
      - opendevin-net

  postgres:
    image: postgres:latest
    pull_policy: always
    container_name: od_postgres
    env_file:
      - .env
      - docker/postgres/.env
    volumes:
      - posgtres_data:${POSTGRES_DATA:-/var/lib/postgres}
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}"
    tmpfs:
      - /var/run:size=1m
      - /tmp
    networks:
      - opendevin-net

  # UI service
  web_ui:
    container_name: devin_web
    hostname: devin_web
    image: lehcode/opendevin_ui-node${NODE_VERSION:?}-npm${NPM_VERSION}-pnpm-reactjs:dev
    pull_policy: always
    build:
      dockerfile: docker/devin/web_ui/${UI_BUILD_DOCKERFILE:?}
      args:
        node_version: ${NODE_VERSION:?}
        npm_version: ${NPM_VERSION:?}
        node_env: ${NODE_ENV:?}
        debug: ${DEBUG:?}
        node_options: ${NODE_OPTIONS}
        build_prod: ${BUILD_PROD}
        frontend_port: ${UI_HTTP_PORT:?}
    env_file:
      - ./.env
      - docker/devin/web_ui/.env
    environment:
      BACKEND_HOST: ${DEVIN_HOST:?}:${DEVIN_API_PORT:?}
      FRONTEND_PORT: ${UI_HTTP_PORT:?}
      LLM_PROXY_HOST: litellm
      LLM_PROXY_PORT: ${LITELLM_PORT:?}
    networks:
      - opendevin-net
    ports:
      - "${UI_HTTP_PORT:?}:${UI_HTTP_PORT:?}"
      - "${UI_HTTPS_PORT:?}:${UI_HTTPS_PORT:?}"
    tty: true
    command: ""
    volumes:
      - ./docker/openssl.cnf:/etc/ssl/od_openssl.cnf
#      - ./docker/nginx/nginx.conf.dist:/etc/nginx/nginx.conf

networks:
  opendevin-net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

volumes:
  root_dir_vol:
  posgtres_data:
  redis_data:
  pip_cache_vol:
  conda_vol:
  od_vol:
