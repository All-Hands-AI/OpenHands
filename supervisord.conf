[supervisord]
nodaemon=true
logfile=/var/log/supervisord.log
pidfile=/var/run/supervisord.pid
user=root
loglevel=info

[program:dockerd]
command=dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay2 --iptables=false --ip-forward=false --ip-masq=false --userland-proxy=false --data-root=/var/lib/docker --exec-root=/var/run/docker --pidfile=/var/run/docker.pid --log-level=info
user=root
autostart=true
autorestart=true
priority=100
stdout_logfile=/var/log/docker.log
stderr_logfile=/var/log/docker.log
environment=DOCKER_TLS_CERTDIR=""

[program:openhands]
command=bash -c "cd /app && su openhands -c 'uvicorn openhands.server.listen:app --host 0.0.0.0 --port ${PORT:-3000}'"
user=root
autostart=true
autorestart=true
priority=200
stdout_logfile=/var/log/openhands.log
stderr_logfile=/var/log/openhands.log
depends_on=dockerd
startsecs=10
startretries=3
environment=PYTHONPATH="/app",VIRTUAL_ENV="/app/.venv",PATH="/app/.venv/bin:%(ENV_PATH)s"

[eventlistener:dependent-startup]
command=python3 -c "
import sys
import subprocess
import time

def wait_for_docker():
    for i in range(30):
        try:
            result = subprocess.run(['docker', 'version'], capture_output=True, timeout=5)
            if result.returncode == 0:
                print('Docker is ready')
                return True
        except:
            pass
        print(f'Waiting for Docker... ({i+1}/30)')
        time.sleep(1)
    return False

if wait_for_docker():
    sys.exit(0)
else:
    print('Docker failed to start')
    sys.exit(1)
"
events=PROCESS_STATE_STARTING
result_handler=supervisor.dispatchers:default_handler
buffer_size=100
