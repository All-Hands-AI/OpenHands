"""Map event type strings to their corresponding classes."""

from openhands.events.action import (
    NullAction,
    FileReadAction,
    FileWriteAction,
    FileDeleteAction,
    FileListAction,
    FileCreateAction,
    FileEditAction,
    FileUndoEditAction,
    FileInsertAction,
    FileViewAction,
    FileViewRangeAction,
    BrowserAction,
    BrowserGotoAction,
    BrowserGoBackAction,
    BrowserGoForwardAction,
    BrowserNoopAction,
    BrowserScrollAction,
    BrowserFillAction,
    BrowserSelectOptionAction,
    BrowserClickAction,
    BrowserDblClickAction,
    BrowserHoverAction,
    BrowserPressAction,
    BrowserFocusAction,
    BrowserClearAction,
    BrowserDragAndDropAction,
    BrowserUploadFileAction,
    CommandAction,
    IPythonAction,
    WebReadAction,
    FinishAction,
)
from openhands.events.observation import (
    NullObservation,
    FileReadObservation,
    FileWriteObservation,
    FileDeleteObservation,
    FileListObservation,
    FileCreateObservation,
    FileEditObservation,
    FileUndoEditObservation,
    FileInsertObservation,
    FileViewObservation,
    FileViewRangeObservation,
    BrowserObservation,
    BrowserGotoObservation,
    BrowserGoBackObservation,
    BrowserGoForwardObservation,
    BrowserNoopObservation,
    BrowserScrollObservation,
    BrowserFillObservation,
    BrowserSelectOptionObservation,
    BrowserClickObservation,
    BrowserDblClickObservation,
    BrowserHoverObservation,
    BrowserPressObservation,
    BrowserFocusObservation,
    BrowserClearObservation,
    BrowserDragAndDropObservation,
    BrowserUploadFileObservation,
    CommandObservation,
    IPythonObservation,
    WebReadObservation,
    FinishObservation,
    ErrorObservation,
    SuccessObservation,
    RejectObservation,
    DelegateObservation,
)

EVENT_TYPE_MAP = {
    # Actions
    'NullAction': NullAction,
    'FileReadAction': FileReadAction,
    'FileWriteAction': FileWriteAction,
    'FileDeleteAction': FileDeleteAction,
    'FileListAction': FileListAction,
    'FileCreateAction': FileCreateAction,
    'FileEditAction': FileEditAction,
    'FileUndoEditAction': FileUndoEditAction,
    'FileInsertAction': FileInsertAction,
    'FileViewAction': FileViewAction,
    'FileViewRangeAction': FileViewRangeAction,
    'BrowserAction': BrowserAction,
    'BrowserGotoAction': BrowserGotoAction,
    'BrowserGoBackAction': BrowserGoBackAction,
    'BrowserGoForwardAction': BrowserGoForwardAction,
    'BrowserNoopAction': BrowserNoopAction,
    'BrowserScrollAction': BrowserScrollAction,
    'BrowserFillAction': BrowserFillAction,
    'BrowserSelectOptionAction': BrowserSelectOptionAction,
    'BrowserClickAction': BrowserClickAction,
    'BrowserDblClickAction': BrowserDblClickAction,
    'BrowserHoverAction': BrowserHoverAction,
    'BrowserPressAction': BrowserPressAction,
    'BrowserFocusAction': BrowserFocusAction,
    'BrowserClearAction': BrowserClearAction,
    'BrowserDragAndDropAction': BrowserDragAndDropAction,
    'BrowserUploadFileAction': BrowserUploadFileAction,
    'CommandAction': CommandAction,
    'IPythonAction': IPythonAction,
    'WebReadAction': WebReadAction,
    'FinishAction': FinishAction,
    # Observations
    'NullObservation': NullObservation,
    'FileReadObservation': FileReadObservation,
    'FileWriteObservation': FileWriteObservation,
    'FileDeleteObservation': FileDeleteObservation,
    'FileListObservation': FileListObservation,
    'FileCreateObservation': FileCreateObservation,
    'FileEditObservation': FileEditObservation,
    'FileUndoEditObservation': FileUndoEditObservation,
    'FileInsertObservation': FileInsertObservation,
    'FileViewObservation': FileViewObservation,
    'FileViewRangeObservation': FileViewRangeObservation,
    'BrowserObservation': BrowserObservation,
    'BrowserGotoObservation': BrowserGotoObservation,
    'BrowserGoBackObservation': BrowserGoBackObservation,
    'BrowserGoForwardObservation': BrowserGoForwardObservation,
    'BrowserNoopObservation': BrowserNoopObservation,
    'BrowserScrollObservation': BrowserScrollObservation,
    'BrowserFillObservation': BrowserFillObservation,
    'BrowserSelectOptionObservation': BrowserSelectOptionObservation,
    'BrowserClickObservation': BrowserClickObservation,
    'BrowserDblClickObservation': BrowserDblClickObservation,
    'BrowserHoverObservation': BrowserHoverObservation,
    'BrowserPressObservation': BrowserPressObservation,
    'BrowserFocusObservation': BrowserFocusObservation,
    'BrowserClearObservation': BrowserClearObservation,
    'BrowserDragAndDropObservation': BrowserDragAndDropObservation,
    'BrowserUploadFileObservation': BrowserUploadFileObservation,
    'CommandObservation': CommandObservation,
    'IPythonObservation': IPythonObservation,
    'WebReadObservation': WebReadObservation,
    'FinishObservation': FinishObservation,
    'ErrorObservation': ErrorObservation,
    'SuccessObservation': SuccessObservation,
    'RejectObservation': RejectObservation,
    'DelegateObservation': DelegateObservation,
}

def get_event_type_class(event_type_str: str | None) -> type | None:
    """Convert an event type string to its corresponding class.

    Args:
        event_type_str (str | None): The event type string (e.g., "FileReadAction")

    Returns:
        type | None: The corresponding event class, or None if not found or input is None
    """
    if event_type_str is None:
        return None
    return EVENT_TYPE_MAP.get(event_type_str)