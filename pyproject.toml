[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.poetry]
name = "openhands-ai"
version = "0.51.1"
description = "OpenHands: Code Less, Make More"
authors = [ "OpenHands" ]
license = "MIT"
readme = "README.md"
repository = "https://github.com/All-Hands-AI/OpenHands"
packages = [
  { include = "openhands/**/*" },
  { include = "third_party/**/*" },
  { include = "pyproject.toml", to = "openhands" },
  { include = "poetry.lock", to = "openhands" },
]
include = [
  "openhands/integrations/vscode/openhands-vscode-0.0.1.vsix",
  "microagents/**/*",
]
build = "build_vscode.py" # Build VSCode extension during Poetry build

[tool.poetry.dependencies]
python = "^3.12,<3.14"

# Core dependencies - always installed (includes all core packages)
# This includes: events, llm, runtime, controller, critic, agenthub,
# integrations, storage, security, memory, microagent, mcp, core, utils
litellm = "^1.74.3, !=1.64.4, !=1.67.*"            # avoid 1.64.4 (known bug) & 1.67.* (known bug #10272)
aiohttp = ">=3.9.0,!=3.11.13"                      # Pin to avoid yanked version 3.11.13
termcolor = "*"
toml = "*"
types-toml = "*"
python-dotenv = "*"
tenacity = ">=8.5,<10.0"
pydantic = "*"
python-json-logger = "^3.2.1"
jinja2 = "^3.1.3"
pathspec = "^0.12.1"
pyjwt = "^2.9.0"
python-frontmatter = "^1.1.0"
shellingham = "^1.5.4"
pyyaml = "^6.0.2"
bashlex = "^0.18"
zope-interface = "7.2"
protobuf = "^5.0.0,<6.0.0"                         # Updated to support newer opentelemetry
opentelemetry-api = "^1.33.1"
opentelemetry-exporter-otlp-proto-grpc = "^1.33.1"
libtmux = ">=0.37,<0.40"
psutil = "*"
anyio = "4.9.0"
dirhash = "*"
rapidfuzz = "^3.9.0"
whatthepatch = "^1.0.6"
deprecated = "*"
httpx-aiohttp = "^0.1.8"
pexpect = "*"                                      # Needed for core runtime functionality
fastmcp = "^2.5.2"                                 # Needed for core MCP functionality

# CLI-specific dependencies (optional)
prompt-toolkit = { version = "^3.0.50", optional = true }

# Server-specific dependencies (optional)
fastapi = { version = "*", optional = true }
uvicorn = { version = "*", optional = true }
python-multipart = { version = "*", optional = true }
tornado = { version = "*", optional = true }
python-socketio = { version = "^5.11.4", optional = true }
sse-starlette = { version = "^2.1.3", optional = true }

# Optional heavy dependencies for core functionality
docker = { version = "*", optional = true }
kubernetes = { version = "^33.1.0", optional = true }
browsergym-core = { version = "0.13.3", optional = true }
html2text = { version = "*", optional = true }
PyPDF2 = { version = "*", optional = true }
python-pptx = { version = "*", optional = true }
pylatexenc = { version = "*", optional = true }
python-docx = { version = "*", optional = true }
ipywidgets = { version = "^8.1.5", optional = true }
qtconsole = { version = "^5.6.1", optional = true }
jupyter_kernel_gateway = { version = "*", optional = true }
google-generativeai = { version = "*", optional = true }
google-api-python-client = { version = "^2.164.0", optional = true }
google-auth-httplib2 = { version = "*", optional = true }
google-auth-oauthlib = { version = "*", optional = true }
redis = { version = ">=5.2,<7.0", optional = true }
minio = { version = "^7.2.8", optional = true }
stripe = { version = ">=11.5,<13.0", optional = true }
google-cloud-aiplatform = { version = "*", optional = true }
anthropic = { version = "*", extras = [ "vertex" ], optional = true }
boto3 = { version = "*", optional = true }
pygithub = { version = "^2.5.0", optional = true }
openhands-aci = { version = "0.3.1", optional = true }
pythonnet = { version = "*", optional = true }
memory-profiler = { version = "^0.61.0", optional = true }
numpy = { version = "*", optional = true }
json-repair = { version = "*", optional = true }
joblib = { version = "*", optional = true }

# Third-party runtime dependencies (optional)
e2b = { version = ">=1.0.5,<1.8.0", optional = true }
modal = { version = ">=0.66.26,<1.2.0", optional = true }
runloop-api-client = { version = "0.50.0", optional = true }
daytona = { version = "0.24.2", optional = true }

# Poetry is needed for the build process
poetry = { version = "^2.1.2", optional = true }

[tool.poetry.extras]
# Main feature packages - install only what you need
cli = [ "prompt-toolkit" ]
resolver = [  ]                                                                                      # Resolver uses core functionality only
server = [ "fastapi", "uvicorn", "python-multipart", "tornado", "python-socketio", "sse-starlette" ]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "0.12.5"
mypy = "1.17.0"
pre-commit = "4.2.0"
build = "*"
types-setuptools = "*"
pytest = "^8.4.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-asyncio = "*"
pytest-forked = "*"
pytest-xdist = "*"
openai = "*"
pandas = "*"
reportlab = "*"
gevent = ">=24.2.1,<26.0.0"

[tool.poetry.group.runtime]
optional = true

[tool.poetry.group.runtime.dependencies]
jupyterlab = "*"
notebook = "*"
flake8 = "*"

[tool.poetry.group.ci]
optional = true

[tool.poetry.group.ci.dependencies]
# CI convenience group - includes all extras as regular dependencies
prompt-toolkit = "*"
fastapi = "*"
uvicorn = "*"
python-multipart = "*"
tornado = "*"
python-socketio = "*"
sse-starlette = "*"

[tool.poetry.group.evaluation]
optional = true

[tool.poetry.group.evaluation.dependencies]
streamlit = "*"
whatthepatch = "*"
retry = "*"
evaluate = "*"
visualswebench = { git = "https://github.com/luolin101/Visual-SWE-bench.git" }
swegym = { git = "https://github.com/SWE-Gym/SWE-Bench-Package.git" }
commit0 = "*"
func_timeout = "*"
sympy = "*"
gdown = "*"
matplotlib = "*"
seaborn = "*"
tabulate = "*"
browsergym = "0.13.3"
browsergym-webarena = "0.13.3"
browsergym-miniwob = "0.13.3"
browsergym-visualwebarena = "0.13.3"
boto3-stubs = { extras = [ "s3" ], version = "^1.37.19" }
# transitive dependency, pinned here to avoid conflicts
pyarrow = "21.0.0"
datasets = "*"
joblib = "*"
swebench = { git = "https://github.com/ryanhoangt/SWE-bench.git", rev = "fix-modal-patch-eval" }

[tool.poetry.scripts]
openhands = "openhands.cli.entry:main"

[tool.poetry.group.testgeneval.dependencies]
fuzzywuzzy = "^0.18.0"
rouge = "^1.0.1"
python-levenshtein = ">=0.26.1,<0.28.0"
tree-sitter-python = "^0.23.6"

[tool.poetry-dynamic-versioning]
enable = true
style = "semver"

[tool.autopep8]
# autopep8 fights with mypy on line length issue
ignore = [ "E501" ]

[tool.black]
# prevent black (if installed) from changing single quotes to double quotes
skip-string-normalization = true

[tool.ruff]
lint.select = [ "D" ]
# ignore warnings for missing docstrings
lint.ignore = [ "D1" ]
lint.pydocstyle.convention = "google"

[tool.coverage.run]
concurrency = [ "gevent" ]
