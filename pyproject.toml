[build-system]
requires = ["hatchling>=1.13.0"]
build-backend = "hatchling.build"

[project]
name = "openhands-ai"
version = "0.54.0"
description = "OpenHands: Code Less, Make More"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "OpenHands" }]
requires-python = ">=3.12,<3.14"
dependencies = [
  "litellm>=1.74.3,!=1.64.4,!=1.67.*",
  "openai==1.99.9",
  "aiohttp>=3.9.0,!=3.11.13",
  "google-generativeai",
  "google-api-python-client>=2.164.0,<3.0.0",
  "google-auth-httplib2",
  "google-auth-oauthlib",
  "termcolor",
  "docker",
  "fastapi",
  "toml",
  "types-toml",
  "uvicorn",
  "numpy",
  "json-repair",
  "browsergym-core==0.13.3",
  "html2text",
  "deprecated",
  "pexpect",
  "jinja2>=3.1.3,<4.0.0",
  "python-multipart",
  "tenacity>=8.5,<10.0",
  "zope-interface==7.2",
  "pathspec>=0.12.1,<0.13.0",
  "pyjwt>=2.9.0,<3.0.0",
  "dirhash",
  "tornado",
  "python-dotenv",
  "rapidfuzz>=3.9.0,<4.0.0",
  "whatthepatch>=1.0.6,<2.0.0",
  "protobuf>=5.0.0,<6.0.0",
  "opentelemetry-api>=1.33.1,<2.0.0",
  "opentelemetry-exporter-otlp-proto-grpc>=1.33.1,<2.0.0",
  "libtmux>=0.37,<0.40",
  "pygithub>=2.5.0,<3.0.0",
  "joblib",
  "openhands-aci==0.3.2",
  "python-socketio>=5.11.4,<6.0.0",
  "sse-starlette>=2.1.3,<3.0.0",
  "psutil",
  "python-json-logger>=3.2.1,<4.0.0",
  "prompt-toolkit>=3.0.50,<4.0.0",
  "anyio==4.9.0",
  "pythonnet",
  "fastmcp>=2.5.2,<3.0.0",
  "python-frontmatter>=1.1.0,<2.0.0",
  "shellingham>=1.5.4,<2.0.0",
  "ipywidgets>=8.1.5,<9.0.0",
  "qtconsole>=5.6.1,<6.0.0",
  "PyPDF2",
  "python-pptx",
  "pylatexenc",
  "python-docx",
  "bashlex>=0.18,<0.19",
  "redis>=5.2,<7.0",
  "google-cloud-aiplatform",
  "anthropic[vertex]",
  "boto3",
  "kubernetes>=33.1.0,<34.0.0",
  "pyyaml>=6.0.2,<7.0.0",
  "memory-profiler>=0.61.0,<1.0.0",
  "jupyter_kernel_gateway",
  "httpx-aiohttp>=0.1.8,<0.2.0",
]

[project.urls]
Repository = "https://github.com/All-Hands-AI/OpenHands"

[project.scripts]
openhands = "openhands.cli.entry:main"

[project.optional-dependencies]
third_party_runtimes = [
  "e2b>=1.0.5,<1.8.0",
  "modal>=0.66.26,<1.2.0",
  "runloop-api-client==0.50.0",
  "daytona==0.24.2",
]


[dependency-groups]
dev = [
  "ruff==0.12.5",
  "mypy==1.17.0",
  "pre-commit==4.2.0",
  "build",
  "types-setuptools",
  "pytest>=8.4.0,<9.0.0",
]
test = [
  "pytest",
  "pytest-cov",
  "pytest-asyncio",
  "pytest-forked",
  "pytest-xdist",
  "pytest-playwright>=0.7.0,<0.8.0",
  "pytest-timeout>=2.4.0,<3.0.0",
  "pandas",
  "reportlab",
  "gevent>=24.2.1,<26.0.0",
]
runtime = [
  "jupyterlab",
  "notebook",
  "flake8",
]
evaluation = [
  "streamlit",
  "whatthepatch",
  "retry",
  "evaluate",
  "visualswebench @ git+https://github.com/luolin101/Visual-SWE-bench.git",
  "swegym @ git+https://github.com/SWE-Gym/SWE-Bench-Package.git",
  "commit0",
  "func_timeout",
  "sympy",
  "gdown",
  "matplotlib",
  "seaborn",
  "tabulate",
  "browsergym==0.13.3",
  "browsergym-webarena==0.13.3",
  "browsergym-miniwob==0.13.3",
  "browsergym-visualwebarena==0.13.3",
  "boto3-stubs[s3]>=1.37.19,<2.0.0",
  "pyarrow==21.0.0",
  "datasets",
  "joblib",
  "swebench @ git+https://github.com/ryanhoangt/SWE-bench.git@fix-modal-patch-eval",
]
testgeneval = [
  "fuzzywuzzy>=0.18.0,<0.19.0",
  "rouge>=1.0.1,<2.0.0",
  "python-levenshtein>=0.26.1,<0.28.0",
  "tree-sitter-python>=0.23.6,<0.24.0",
]

[tool.hatch.build.targets.sdist]
include = [
  "openhands/**",
  "third_party/**",
  "microagents/**",
  "openhands/integrations/vscode/openhands-vscode-0.0.1.vsix",
]

[tool.hatch.build.targets.wheel]
include = [
  "third_party/**",
  "microagents/**",
  "openhands/integrations/vscode/openhands-vscode-0.0.1.vsix",
]

[tool.hatch.build.targets.sdist.force-include]
"pyproject.toml" = "openhands/pyproject.toml"
"uv.lock" = "openhands/uv.lock"

[tool.hatch.build.targets.wheel.force-include]
"pyproject.toml" = "openhands/pyproject.toml"
"uv.lock" = "openhands/uv.lock"

[tool.autopep8]
# autopep8 fights with mypy on line length issue
ignore = [ "E501" ]

[tool.black]
# prevent black (if installed) from changing single quotes to double quotes
skip-string-normalization = true

[tool.ruff]
lint.select = [ "D" ]
# ignore warnings for missing docstrings
lint.ignore = [ "D1" ]
lint.pydocstyle.convention = "google"

[tool.coverage.run]
concurrency = [ "gevent" ]
