[tool.poetry]
name = "opendevin"
version = "0.8.1"
description = "OpenDevin: Code Less, Make More"
authors = ["OpenDevin"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/OpenDevin/OpenDevin"
include = ["poetry.lock"]

[tool.poetry.dependencies]
python = "^3.11"
datasets = "*"
pandas = "*"
litellm = "*"
google-generativeai = "*" # To use litellm with Gemini Pro API
termcolor = "*"
seaborn = "*"
docker = "*"
fastapi = "*"
toml = "*"
uvicorn = "*"
types-toml = "*"
numpy = "*"
json-repair = "*"
browsergym = "0.3.4" # integrate browsergym as the browsing interface
html2text = "*"
e2b = "^0.17.1"
pexpect = "*"
jinja2 = "^3.1.3"
python-multipart = "*"
boto3 = "*"
minio = "^7.2.7"
gevent = "^24.2.1"
pyarrow = "17.0.0" # transitive dependency, pinned here to avoid conflicts
tenacity = "^8.5.0"
zope-interface = "6.4.post2"
pathspec = "^0.12.1"
google-cloud-aiplatform = "*"
grep-ast = "0.3.2"
tree-sitter = "0.21.3"
flake8 = "^7.1.0"
isort = "^5.13.2"
pytest = "^8.3.2"
scipy = "^1.14.0"
autopep8 = "^2.3.1"
matplotlib = "^3.9.1"
reportlab = "^4.2.2"
tabulate = "^0.9.0"

[tool.poetry.group.llama-index.dependencies]
llama-index = "*"
llama-index-vector-stores-chroma = "*"
chromadb = "*"
llama-index-embeddings-huggingface = "*"
llama-index-embeddings-azure-openai = "*"
llama-index-embeddings-ollama = "*"
torch = [
    { version = "2.2.2+cpu", source = "pytorch-cpu", markers = "sys_platform != 'darwin'" },
    { version = "2.2.2", markers = "sys_platform == 'darwin'" }
]

[tool.poetry.group.dev.dependencies]
ruff = "0.5.4"
mypy = "1.11.0"
pre-commit = "3.7.1"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-asyncio = "*"
pytest-forked = "*"
flake8 = "*"
openai = "*"
python-docx = "*"
PyPDF2 = "*"
pylatexenc = "*"
python-pptx = "*"
opencv-python = "*"
pandas = "*"
reportlab = "*"

[[tool.poetry.source]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[tool.coverage.run]
concurrency = ["gevent"]

[tool.poetry.group.runtime.dependencies]
jupyterlab = "*"
notebook = "*"
jupyter_kernel_gateway = "*"
flake8 = "*"
python-docx = "*"
PyPDF2 = "*"
python-pptx = "*"
pylatexenc = "*"
opencv-python = "*"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.autopep8]
# autopep8 fights with mypy on line length issue
ignore = [ "E501" ]

[tool.black]
# prevent black (if installed) from changing single quotes to double quotes
skip-string-normalization = true

[tool.ruff.lint]
select = ["D"]
# ignore warnings for missing docstrings
ignore = ["D1"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.poetry.group.evaluation.dependencies]
streamlit = "*"
whatthepatch = "*"
retry = "*"
evaluate = "*"
swebench = { git = "https://github.com/OpenDevin/SWE-bench.git" }
