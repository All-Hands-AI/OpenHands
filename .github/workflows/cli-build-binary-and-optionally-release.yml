# Workflow that builds and tests the CLI binary executable
name: CLI - Build binary and optionally release

# Run on pushes to main branch and CLI tags, and on pull requests when CLI files change
on:
  push:
    branches:
      - main
    tags:
      - "*-cli"
  pull_request:
    paths:
      - "openhands-cli/**"

permissions:
  contents: write       # needed to create releases or upload assets

# Cancel previous runs if a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ (github.head_ref && github.ref) || github.run_id }}
  cancel-in-progress: true

jobs:
  build-binary:
    name: Build binary executable
    strategy:
      matrix:
        include:
          # Build on Ubuntu 20.04 for maximum GLIBC compatibility (GLIBC 2.31)
          - os: ubuntu-22.04
            platform: linux
            artifact_name: openhands-cli-linux
          # Build on macOS for macOS users
          - os: macos-15
            platform: macos
            artifact_name: openhands-cli-macos
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install dependencies
        working-directory: openhands-cli
        run: |
          uv sync

      - name: Build binary executable
        working-directory: openhands-cli
        run: |
          ./build.sh --install-pyinstaller | tee output.log
          echo "Full output:"
          cat output.log

          if grep -q "‚ùå" output.log; then
            echo "‚ùå Found failure marker in output"
            exit 1
          fi

          echo "‚úÖ Build & test finished without ‚ùå markers"

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: openhands-cli/dist/openhands*
          retention-days: 30

  test-linux-compatibility:
    name: Test Linux binary compatibility
    needs: build-binary
    strategy:
      matrix:
        # Test on multiple Ubuntu versions to ensure GLIBC compatibility
        ubuntu-version: [ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]
    runs-on: ${{ matrix.ubuntu-version }}
    # Only run compatibility tests on pull requests and main branch pushes, not on tags
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Linux binary artifact
        uses: actions/download-artifact@v4
        with:
          name: openhands-cli-linux
          path: binary-test

      - name: Test binary compatibility
        run: |
          echo "üß™ Testing OpenHands CLI binary on ${{ matrix.ubuntu-version }}"

          # Make binary executable
          chmod +x binary-test/openhands

          # Check GLIBC version available on this system
          echo "üìã System GLIBC version:"
          ldd --version | head -1

          # Check binary dependencies
          echo "üìã Binary dependencies:"
          ldd binary-test/openhands | head -10

          # Test that binary can start (with timeout to avoid hanging)
          echo "üöÄ Testing binary startup..."
          timeout 30s binary-test/openhands --help || {
            exit_code=$?
            if [ $exit_code -eq 124 ]; then
              echo "‚ö†Ô∏è  Binary startup timed out (this might be expected for --help)"
            else
              echo "‚ùå Binary failed to start with exit code: $exit_code"
              exit 1
            fi
          }

          echo "‚úÖ Binary compatibility test passed on ${{ matrix.ubuntu-version }}"

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-binary
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          # Copy binaries with appropriate names for release
          if [ -f artifacts/openhands-cli-linux/openhands ]; then
            cp artifacts/openhands-cli-linux/openhands release-assets/openhands-linux
          fi
          if [ -f artifacts/openhands-cli-macos/openhands ]; then
            cp artifacts/openhands-cli-macos/openhands release-assets/openhands-macos
          fi
          ls -la release-assets/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/*
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
