# Workflow that runs python unit tests
name: Run Python Unit Tests

# The jobs in this workflow are required, so they must run at all times
# * Always run on "main"
# * Always run on PRs
on:
  push:
    branches:
      - main
  pull_request:

# If triggered by a PR, it will be in the same group. However, each commit on main will be in its own unique group
concurrency:
  group: ${{ github.workflow }}-${{ (github.head_ref && github.ref) || github.run_id }}
  cancel-in-progress: true

jobs:
  # Run python unit tests on Linux
  test-on-linux:
    name: Python Unit Tests on Linux
    runs-on: blacksmith-4vcpu-ubuntu-2204
    env:
      INSTALL_DOCKER: '0' # Set to '0' to skip Docker installation
    strategy:
      matrix:
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Install tmux
        run: sudo apt-get update && sudo apt-get install -y tmux
      - name: Setup Node.js
        uses: useblacksmith/setup-node@v5
        with:
          node-version: '22.x'
      - name: Install UV
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Set up Python
        uses: useblacksmith/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies using UV
        run: |
          source $HOME/.cargo/env
          uv venv --python python${{ matrix.python-version }}
          uv pip install -r requirements-dev.txt
          uv pip install -e ".[test,runtime]"
      - name: Build Environment
        run: make build
      - name: Run Unit Tests
        run: |
          source $HOME/.cargo/env
          uv run pytest --forked -n auto -svv ./tests/unit
      - name: Run Runtime Tests with CLIRuntime
        run: |
          source $HOME/.cargo/env
          TEST_RUNTIME=cli uv run pytest -svv tests/runtime/test_bash.py

  # Run specific Windows python tests
  test-on-windows:
    name: Python Tests on Windows
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Install UV
        run: powershell -c "irm https://astral.sh/uv/install.ps1 | iex"
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies using UV
        run: |
          uv venv --python python${{ matrix.python-version }}
          uv pip install -r requirements-dev.txt
          uv pip install -e ".[test,runtime]"
      - name: Run Windows unit tests
        run: uv run pytest -svv tests/unit/test_windows_bash.py
        env:
          DEBUG: "1"
      - name: Run Windows runtime tests with LocalRuntime
        run: $env:TEST_RUNTIME="local"; uv run pytest -svv tests/runtime/test_bash.py
        env:
          TEST_RUNTIME: local
          DEBUG: "1"
