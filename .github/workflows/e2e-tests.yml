name: End-to-End Tests

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]
  workflow_dispatch:

# If triggered by a PR, it will be in the same group
concurrency:
  group: ${{ github.workflow }}-${{ (github.head_ref && github.ref) || github.run_id }}
  cancel-in-progress: true

jobs:
  e2e-tests:
    if: contains(github.event.pull_request.labels.*.name, 'end-to-end') || github.event_name == 'workflow_dispatch'
    runs-on: blacksmith-4vcpu-ubuntu-2204
    timeout-minutes: 30

    env:
      RUNTIME: local
      INSTALL_DOCKER: 0  # Skip Docker installation, use existing Docker
      FRONTEND_PORT: 12000
      FRONTEND_HOST: 0.0.0.0
      BACKEND_HOST: 0.0.0.0
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      LLM_MODEL: ${{ secrets.LLM_MODEL || 'gpt-4o' }}
      LLM_API_KEY: ${{ secrets.LLM_API_KEY || 'test-key' }}
      LLM_BASE_URL: ${{ secrets.LLM_BASE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install poetry via pipx
        run: pipx install poetry

      - name: Set up Python
        uses: useblacksmith/setup-python@v6
        with:
          python-version: '3.12'
          cache: 'poetry'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-0 netcat-openbsd tmux

      - name: Setup Node.js
        uses: useblacksmith/setup-node@v5
        with:
          node-version: '22.x'

      - name: Setup workspace for end-to-end tests
        run: |
          # Create workspace directory structure that the runner can write to
          mkdir -p /tmp/openhands-workspace/.downloads
          chmod -R 755 /tmp/openhands-workspace

          # Also create the actual /workspace directory for browser environment
          sudo mkdir -p /workspace/.downloads
          sudo chown -R $(id -u):$(id -g) /workspace
          sudo chmod -R 755 /workspace

      - name: Build OpenHands
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_MODEL: ${{ secrets.LLM_MODEL || 'gpt-4o' }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY || 'test-key' }}
          LLM_BASE_URL: ${{ secrets.LLM_BASE_URL }}
          INSTALL_DOCKER: 0
          RUNTIME: local
        run: |
          # Build OpenHands using make build
          make build > /tmp/openhands-e2e-build.log 2>&1

          # Start OpenHands in the background
          make run FRONTEND_PORT=12000 FRONTEND_HOST=0.0.0.0 BACKEND_HOST=0.0.0.0 &> /tmp/openhands-e2e-test.log &

          # Wait for the application to start with active polling
          echo "Waiting for OpenHands to start..."

          # Set up polling parameters
          max_attempts=20
          wait_time=30
          attempt=1

          while [ $attempt -le $max_attempts ]; do
            echo "Checking if OpenHands is running (attempt $attempt of $max_attempts)..."

            # Check if port is open
            if nc -z localhost 12000; then
              # Check if we get a proper HTML response
              if curl -s http://localhost:12000 | grep -q "<html"; then
                echo "SUCCESS: OpenHands is running and responding on port 12000"

                # Try to get the page title for additional verification
                page_title=$(curl -s http://localhost:12000 | grep -o "<title>.*</title>" || echo "No title found")
                echo "Page title: $page_title"
                break
              else
                echo "Port 12000 is open but not returning HTML content yet"
              fi
            else
              echo "Port 12000 is not open yet"
            fi

            # Show recent log output every 3 attempts
            if [ $((attempt % 3)) -eq 0 ]; then
              echo "Recent log output:"
              tail -n 20 /tmp/openhands-e2e-test.log
            fi

            # Check if we've reached the maximum number of attempts
            if [ $attempt -eq $max_attempts ]; then
              echo "ERROR: OpenHands failed to start after $max_attempts attempts"
              echo "Last 50 lines of the log:"
              tail -n 50 /tmp/openhands-e2e-test.log
              exit 1
            fi

            # Wait before next attempt
            echo "Waiting $wait_time seconds before next check..."
            sleep $wait_time
            attempt=$((attempt + 1))
          done

      - name: Run end-to-end tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_MODEL: ${{ secrets.LLM_MODEL || 'gpt-4o' }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY || 'test-key' }}
          LLM_BASE_URL: ${{ secrets.LLM_BASE_URL }}
          SANDBOX_VOLUMES: /tmp/openhands-workspace:/workspace:rw
          SANDBOX_USER_ID: 1000
          SANDBOX_RUNTIME: local
          INSTALL_DOCKER: 0
          RUNTIME: local
          FRONTEND_PORT: 12000
          FRONTEND_HOST: 0.0.0.0
          BACKEND_HOST: 0.0.0.0
          BACKEND_PORT: 3000
        run: |
          cd tests/e2e && poetry run python -m pytest test_workflow.py::test_openhands_workflow -v

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: tests/e2e/test-results/
          retention-days: 30

      - name: Upload OpenHands logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: openhands-logs
          path: |
            /tmp/openhands-e2e-test.log
            /tmp/openhands-e2e-build.log
          retention-days: 30

      - name: Cleanup
        if: always()
        run: |
          # Stop OpenHands
          pkill -f "make run" || true
          pkill -f "python -m openhands" || true
