# Workflow that runs python unit tests on WSL
name: Run Python Unit Tests on WSL

# The jobs in this workflow are required, so they must run at all times
# * Always run on "main"
# * Always run on PRs
on:
  push:
    branches:
      - main
  pull_request:

# If triggered by a PR, it will be in the same group. However, each commit on main will be in its own unique group
concurrency:
  group: ${{ github.workflow }}-${{ (github.head_ref && github.ref) || github.run_id }}
  cancel-in-progress: true

jobs:
  test-on-wsl:
    name: Python Unit Tests on WSL (${{ matrix.python-version }})
    runs-on: windows-latest
    env:
      INSTALL_DOCKER: '0'
    defaults:
      run:
        shell: wsl-bash {0}
    strategy:
      matrix:
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up WSL
        uses: Vampire/setup-wsl@v2
        with:
          distribution: Ubuntu-22.04
          additional-packages: python3-pip python3-venv curl software-properties-common

      - name: Set up Python and Poetry in WSL
        run: |
          # Add deadsnakes PPA for Python 3.12
          sudo add-apt-repository ppa:deadsnakes/ppa -y
          sudo apt-get update
          sudo apt-get install -y python3.12 python3.12-venv python3.12-dev
          
          # Install pip for Python 3.12
          curl -sS https://bootstrap.pypa.io/get-pip.py | python3.12
          
          # Install poetry using pip
          python3.12 -m pip install poetry
          
      - name: Install Python dependencies using Poetry
        run: |
          # Ensure we're using Python 3.12
          poetry env use python3.12
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry install -vv --without evaluation,llama-index
        
      - name: Build Environment
        run: make build
        
      - name: Run Tests
        run: poetry run pytest --forked --cov=openhands --cov-report=xml -svv ./tests/unit --ignore=tests/unit/test_memory.py
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}