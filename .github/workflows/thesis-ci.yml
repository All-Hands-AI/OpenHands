name: Build and Push Thesis Docker Image

on:
  push:
    branches:
      - staging
      #- 'feat/dockerfile-be-only' 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Extract branch name and short SHA for tagging
      - name: Extract branch name and short SHA
        shell: bash
        run: |
          echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')" >> $GITHUB_ENV
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      # Build and push using the custom Dockerfile path
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          # Specify custom Dockerfile path (relative to repo root)
          file: ./containers/app/app.Dockerfile
          push: true
          tags: |
            oraichain/thesis-be:${{ env.SHORT_SHA }}
            oraichain/thesis-be:latest
          # Optional: Add cache settings for faster builds
          cache-from: type=registry,ref=oraichain/thesis-be:latest
          cache-to: type=inline

      # Share the short SHA as output for potential downstream jobs
      - name: Output image tag
        id: image-tag
        run: |
          echo "Image pushed: oraichain/thesis-be:${{ env.SHORT_SHA }}"
          echo "image-tag=${{ env.SHORT_SHA }}" >> $GITHUB_OUTPUT
