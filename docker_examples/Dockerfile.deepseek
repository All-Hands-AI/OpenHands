# Dockerfile for DeepSeek R1-0528 Local Deployment
FROM nvidia/cuda:11.8-devel-ubuntu22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    python3-venv \
    git \
    wget \
    curl \
    build-essential \
    software-properties-common \
    htop \
    nvtop \
    vim \
    && rm -rf /var/lib/apt/lists/*

# Create symbolic link for python
RUN ln -s /usr/bin/python3 /usr/bin/python

# Upgrade pip
RUN python -m pip install --upgrade pip setuptools wheel

# Copy requirements file
COPY requirements_deepseek.txt .

# Install PyTorch with CUDA support
RUN pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

# Install Python dependencies
RUN pip install -r requirements_deepseek.txt

# Install optional dependencies
RUN pip install flash-attn --no-build-isolation || echo "Flash Attention installation failed (optional)"
RUN pip install vllm || echo "vLLM installation failed (optional)"

# Copy application code
COPY examples/ ./examples/
COPY setup_scripts/ ./setup_scripts/
COPY DEEPSEEK_R1_LOCAL_DEPLOYMENT_GUIDE.md .

# Create cache directory
RUN mkdir -p /app/cache/huggingface
ENV HF_HOME=/app/cache/huggingface
ENV TRANSFORMERS_CACHE=/app/cache/huggingface

# Create non-root user
RUN useradd -m -u 1000 deepseek && \
    chown -R deepseek:deepseek /app
USER deepseek

# Expose ports
EXPOSE 8000 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python -c "import torch; print('CUDA available:', torch.cuda.is_available())" || exit 1

# Default command
CMD ["python", "examples/basic_deepseek_usage.py"]